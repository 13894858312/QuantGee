<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 启用spring注解支持 -->
    <context:annotation-config/>


    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
        <!--<property name="driverClassName" value="com.mysql.jdbc.Driver" />-->
        <!--<property name="url" value="jdbc:mysql://localhost:3309/sampledb" />-->
        <!--<property name="username" value="root" />-->
        <!--<property name="password" value="1234" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; 配置回话工厂&ndash;&gt;-->
    <!--<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">-->
        <!--<property name="dataSource">-->
            <!--<ref bean="dataSource" />-->
        <!--</property>-->
        <!--<property name="hibernateProperties">-->
            <!--<props>-->

                <!--&lt;!&ndash; MySQL的方言 &ndash;&gt;-->
                <!--<prop key="hibernate.dialect">data.ExtMysqlDialect</prop>-->
                <!--<prop key="javax.persistence.validation.mode">none</prop>-->
                <!--&lt;!&ndash; 必要时在数据库新建所有表格 &ndash;&gt;-->
                <!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
                <!--<prop key="hibernate.show_sql">true</prop>-->
                <!--<prop key="hibernate.format_sql">true</prop>-->
                <!--<prop key="hibernate.jdbc.fetch_size">50</prop>-->
                <!--<prop key="hibernate.jdbc.batch_size">20</prop>-->
                <!--<prop key="hibernate.jdbc.use_scrollable_resultset">false</prop>-->
                <!--<prop key="hibernate.con">false</prop>-->
                <!--<prop key="Connection.useUnicode">true </prop>-->
                <!--&lt;!&ndash;connection.characterEncoding连接数据库时数据的传输字符集编码方式，最好设置为gbk，用gb2312有的字符不全&ndash;&gt;-->
                <!--<prop key="connection.characterEncoding">utf-8</prop>-->
                <!--&lt;!&ndash; 配置current session的上下文环境，方便我们调用sessionFactory获取当前线程统一个session对象 &ndash;&gt;-->
                <!--<prop key="current_session_context_class">thread</prop>-->
            <!--</props>-->
        <!--</property>-->
        <!--<property name="packagesToScan" value="data" />&lt;!&ndash; 配置需要扫描的包路径，在该包下，所有的类注解配置都会被扫描 &ndash;&gt;-->
    <!--</bean>-->



    <!--action的bean-->
    <bean id="loginAction" class="action.LoginAction" scope="prototype">
    </bean>



    <!--logic的bean-->
    <bean id="userService" class="logic.user.UserServiceImp" scope="prototype">
        <!--<property name="sessionFactory">-->
        <!--<ref local="sessionFactory"/>-->
        <!--</property>-->
    </bean>

    <bean id="transferHelper" class="logic.tools.TransferHelper" scope="prototype">
        <!--<property name="sessionFactory">-->
        <!--<ref local="sessionFactory"/>-->
        <!--</property>-->
    </bean>

    <bean id="stockDataCalculation" class="logic.stock.StockDataCalculation" scope="prototype">
        <!--<property name="sessionFactory">-->
        <!--<ref local="sessionFactory"/>-->
        <!--</property>-->
    </bean>


    <!--Dao的bean-->
    <bean id="stockInfoDao" class="data.stockInfoData.StockInfoData" scope="singleton">
        <!--<property name="sessionFactory">-->
            <!--<ref local="sessionFactory"/>-->
        <!--</property>-->
    </bean>

    <bean id="accountData" class="data.accountData.AccountData" scope="singleton">
        <!--<property name="sessionFactory">-->
        <!--<ref local="sessionFactory"/>-->
        <!--</property>-->
    </bean>

    <bean id="newsData" class="data.newsData.NewsData" scope="singleton">
        <!--<property name="sessionFactory">-->
        <!--<ref local="sessionFactory"/>-->
        <!--</property>-->
    </bean>

    <bean id="userData" class="data.userData.UserData" scope="singleton">
        <!--<property name="sessionFactory">-->
        <!--<ref local="sessionFactory"/>-->
        <!--</property>-->
    </bean>


</beans>